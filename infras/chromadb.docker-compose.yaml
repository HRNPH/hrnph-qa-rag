networks:
  net:
    driver: bridge

services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    env_file:
      - .env
    volumes:
      - chroma-data:/chroma/chroma
    command: "--workers 1 --host 0.0.0.0 --port 8000 --proxy-headers --log-config chromadb/log_config.yml --timeout-keep-alive 30"
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chromadb-router.rule=Host(`chromadb.hrnph.dev`)"
      - "traefik.http.routers.chromadb-router.entrypoints=web"
      - "traefik.http.services.chromadb-service.loadbalancer.server.port=8000"
    networks:
      - net

  traefik:
    image: traefik:latest
    container_name: traefik_proxy
    restart: always
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - net

  dozzle:
    image: amir20/dozzle:v8.9.1
    container_name: chroma_logs
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle-router.rule=Host(`chromadb-logs.hrnph.dev`)"
      - "traefik.http.routers.dozzle-router.entrypoints=web"
      - "traefik.http.services.dozzle-service.loadbalancer.server.port=8080"
    networks:
      - net

  chromadb-admin:
    image: fengzhichao/chromadb-admin
    container_name: chromadb-admin
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chromadb-admin-router.rule=Host(`chromadb-admin.hrnph.dev`)"
      - "traefik.http.routers.chromadb-admin-router.entrypoints=web"
      - "traefik.http.services.chromadb-admin-service.loadbalancer.server.port=3000"
    networks:
      - net

volumes:
  chroma-data:
    driver: local
